apiVersion: v1
kind: Namespace
metadata:
  name: spring-boot-dev
  labels:
    name: spring-boot-dev
    environment: development
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-boot-config-dev
  namespace: spring-boot-dev
data:
  application.yml: |
    spring:
      profiles:
        active: dev
    server:
      port: 8080
    management:
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        health:
          show-details: always
---
apiVersion: v1
kind: Secret
metadata:
  name: spring-boot-secrets-dev
  namespace: spring-boot-dev
type: Opaque
data:
  db-username: c2E=  # sa
  db-password: cGFzc3dvcmQ=  # password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-k8s-demo
  namespace: spring-boot-dev
  labels:
    app: spring-boot-k8s-demo
    environment: dev
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: spring-boot-k8s-demo
  template:
    metadata:
      labels:
        app: spring-boot-k8s-demo
        environment: dev
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: spring-boot-k8s-demo
          image: spring-boot-k8s-demo:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "dev"
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: spring-boot-secrets-dev
                  key: db-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: spring-boot-secrets-dev
                  key: db-password
            - name: JAVA_OPTS
              value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=70.0 -XX:+UseG1GC"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: config-volume
              mountPath: /app/config
              readOnly: true
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 40
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 20
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: spring-boot-config-dev
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-k8s-demo
  namespace: spring-boot-dev
  labels:
    app: spring-boot-k8s-demo
spec:
  type: NodePort
  selector:
    app: spring-boot-k8s-demo
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
      nodePort: 30080

